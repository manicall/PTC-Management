<UserControl x:Class="PTC_Management.Views.ItineraryDialogView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             xmlns:views = "clr-namespace:PTC_Management.Views" 
             xmlns:viewModels = "clr-namespace:PTC_Management.ViewModel"
             xmlns:dialogviewmodels="clr-namespace:PTC_Management.ViewModel" xmlns:model="clr-namespace:PTC_Management.Model"
             d:DataContext="{d:DesignInstance Type=dialogviewmodels:ItineraryDialogViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
  <UserControl.Resources>
    <DataTemplate DataType="{x:Type viewModels:DialogViewModel}">
      <views:ItineraryDialogView />
    </DataTemplate>

    <Style x:Key="TextBlockStyle" TargetType="TextBlock" >
      <Setter Property="Width" Value="145"/>
    </Style>

    <Style x:Key="GroupTextBlockStyle" TargetType="TextBlock" >
      <Setter Property="Width" Value="140"/>
    </Style>

    <Style TargetType="StackPanel" >
      <Setter Property="Margin" Value="0,0,0,10"/>
      <Setter Property="Orientation" Value="Horizontal"/>
    </Style>

    <Style TargetType="TextBox" >
      <Setter Property="Width" Value="200"/>

      <Style.Triggers>
        <Trigger Property="Validation.HasError" Value="True">
          <Setter 
            Property="ToolTip" 
            Value="{Binding RelativeSource={RelativeSource Self}, 
              Path=(Validation.Errors)[0].ErrorContent}" />
          <Setter Property="Foreground" Value="Red" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <!--Валидация полей для ввода -->
    <Style TargetType="Button" x:Key="ConditionButton" >
      <Setter Property="IsEnabled" Value="False"/>
      <Style.Triggers>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding Path=(Validation.HasError), 
              ElementName=textBoxCountCopy}" Value="False"/>
            <Condition Binding="{Binding Path=(Validation.HasError), 
              ElementName=textBoxEmployee}" Value="False"/>
            <Condition Binding="{Binding Path=(Validation.HasError), 
              ElementName=textBoxTransport}" Value="False"/>
            <Condition Binding="{Binding Path=(Validation.HasError), 
              ElementName=textBoxRoute}" Value="False"/>
          </MultiDataTrigger.Conditions>
          <Setter Property="IsEnabled" Value="True"/>
        </MultiDataTrigger>
      </Style.Triggers>
    </Style>

    <model:DateConverter x:Key="DateConverter"/>
    <model:TimeSpanConverter x:Key="TimeSpanConverter"/>
  </UserControl.Resources>

  <StackPanel Orientation="Vertical" Margin="10,0,10,10">
    <StackPanel >
      <Button 
        Name="buttonWriteAndClose" 
        Style="{StaticResource ConditionButton }" 
        Command="{Binding DialogActionCommand }"
        CommandParameter="{Binding Actions.WriteAndClose}" 
        Margin="0 0 35 0" Width="auto"
        Content="Записать и закрыть" />
      <Button 
        Name="buttonWrite" Style="{StaticResource ConditionButton }" 
        Command="{Binding DialogActionCommand }" 
        CommandParameter="{Binding Actions.Write}" 
        Content="Записать" />
      <Button 
        Command="{Binding DialogActionCommand }" 
        CommandParameter="{Binding Actions.Close}"  
        Content="Закрыть" 
        Margin="10 0 0 0" />
    </StackPanel>
    
    <StackPanel Visibility="{Binding CopyParameters.CountVisibility}" >
      <TextBlock Style="{StaticResource TextBlockStyle}" Name="textBlockCountCopy" Text="Количество копий" />
      <TextBox 
        Name ="textBoxCountCopy"
        MaxLength="3"
        Width="50"  
        Text="{
          Binding CopyParameters.Count,
          ValidatesOnDataErrors=True, 
          NotifyOnValidationError=True, 
          UpdateSourceTrigger=PropertyChanged
        }" />
    </StackPanel>
    
    <StackPanel >
      <TextBlock Style="{StaticResource TextBlockStyle}" Name="textBlockEmployee" Text="Сотрудник" />
      <TextBox Name="textBoxEmployee" IsReadOnly="True"  >
        <TextBox.Text>
          <MultiBinding
            StringFormat="{}{0} {1} {2}" 
              ValidatesOnDataErrors="True" 
              NotifyOnValidationError="True"
              UpdateSourceTrigger="PropertyChanged" >

            <Binding Path="DialogItem.Employee.Surname" 
              ValidatesOnDataErrors="True" 
              NotifyOnValidationError="True" />
            <Binding Path="DialogItem.Employee.Name" 
              ValidatesOnDataErrors="True" 
              NotifyOnValidationError="True" />
            <Binding Path="DialogItem.Employee.Patronymic" 
              ValidatesOnDataErrors="True" 
              NotifyOnValidationError="True" />
          </MultiBinding>
        </TextBox.Text>
      </TextBox>

      <Button 
        Content="Выбрать"
        Command="{Binding DialogSelectСommand }"
        CommandParameter="{Binding Destinations.Employee}" 
        Margin="0 0 35 0" Width="auto" />
    </StackPanel>
    
    <StackPanel >
      <TextBlock Style="{StaticResource TextBlockStyle}" Name="textBlockTransport" Text="Транспорт" />
      <TextBox Name="textBoxTransport" IsReadOnly="True" >
        <TextBox.Text >
          <MultiBinding StringFormat="{}{0} {1}" 
              ValidatesOnDataErrors="True" 
              NotifyOnValidationError="True"
              UpdateSourceTrigger="PropertyChanged" >

            <Binding Path="DialogItem.Transport.Name" 
              ValidatesOnDataErrors="True" 
              NotifyOnValidationError="True"/>
            <Binding Path="DialogItem.Transport.LicensePlate" 
              ValidatesOnDataErrors="True" 
              NotifyOnValidationError="True"/>
          </MultiBinding>
        </TextBox.Text>
      </TextBox>

      <Button           
        Content="Выбрать"
        Command="{Binding DialogSelectСommand }"
        CommandParameter="{Binding Destinations.Transport}" 
        Margin="0 0 35 0" Width="auto" />
    </StackPanel>
    <StackPanel >
      <TextBlock Style="{StaticResource TextBlockStyle}" Name="textBlockRoute" Text="Маршрут" />
      <TextBox Name="textBoxRoute" IsReadOnly="True"
        Text="{
          Binding DialogItem.Route.Number,
          ValidatesOnDataErrors=True, 
          NotifyOnValidationError=True, 
          UpdateSourceTrigger=PropertyChanged
        }" />
      <Button           
        Content="Выбрать"
        Command="{Binding DialogSelectСommand }"
        CommandParameter="{Binding Destinations.Route}" 
        Margin="0 0 35 0" Width="auto" />
    </StackPanel>

    <StackPanel >
      <TextBlock 
        Name="textBlockDate" 
        Text="Дата"
        Style="{StaticResource TextBlockStyle}" />

      <DatePicker  
        Name="textBoxDate"
        MaxWidth="100"
        Text="{
          Binding DialogItem.Date,
          StringFormat=\{0:dd.MM.yyyy\},
          ValidatesOnDataErrors=True, 
          NotifyOnValidationError=True, 
          UpdateSourceTrigger=PropertyChanged,
          Mode=TwoWay,
          Converter={StaticResource DateConverter}
        }" />
    </StackPanel>
    <GroupBox Header="Время" MaxWidth="500" HorizontalAlignment="Left">
      <StackPanel Orientation="Vertical">
        <StackPanel  Margin="0,5,0,0">
          <TextBlock 
            Style="{StaticResource GroupTextBlockStyle}"  
            Name="textBlockTimeOnDeparture"
            Text="выезда" />

          <TextBox    
              Text="{
              Binding DialogItem.TimeOnDeparture,
              StringFormat=h\\:mm,
              ValidatesOnDataErrors=True, 
              NotifyOnValidationError=True, 
              UpdateSourceTrigger=PropertyChanged,
              Converter={StaticResource TimeSpanConverter}
            }" />
        </StackPanel>

        <StackPanel Margin="0,5,0,0">
          <TextBlock 
            Style="{StaticResource GroupTextBlockStyle}"                      
            Name="textBlockTimeWhenReturning"                      
            Text="возвращения" />
          <TextBox 
            Name="textBoxTimeWhenReturning" 
            Text="{
              Binding DialogItem.TimeWhenReturning,
              StringFormat=h\\:mm,
              ValidatesOnDataErrors=True, 
              NotifyOnValidationError=True, 
              UpdateSourceTrigger=PropertyChanged,
              Converter={StaticResource TimeSpanConverter} 
            }" />
        </StackPanel>
      </StackPanel>
    </GroupBox>

    <GroupBox Header="Показания спидометра" MaxWidth="500" HorizontalAlignment="Left">
      <StackPanel Orientation="Vertical">
        <StackPanel Margin="0,5,0,0">
          <TextBlock 
            Style="{StaticResource GroupTextBlockStyle}" 
            Name="textBlockSpeedometerInfoOnDeparture"
            Text="при выезде" />
          <TextBox
            Name="textBoxSpeedometerInfoOnDeparture" 
            IsReadOnly="{Binding IsReadOnly.Field[SpeedometerInfoOnDeparture]}"
            MaxLength="9">
            <TextBox.Text>
              <Binding 
                  Path="DialogItem.SpeedometerInfoOnDeparture"       
                  ValidatesOnDataErrors="True"       
                  NotifyOnValidationError="True"       
                  UpdateSourceTrigger="PropertyChanged">
                <Binding.ValidationRules>
                  <model:ToIntValidationRule />
                </Binding.ValidationRules>
              </Binding>
            </TextBox.Text>
          </TextBox>
        </StackPanel>

        <StackPanel  Margin="0,5,0,0">
          <TextBlock 
            Style="{StaticResource GroupTextBlockStyle}" 
            Name="textBlockSpeedometerInfoWhenReturning" 
            Text="при возвращении"         
             />
          <TextBox 
              Name="textBoxSpeedometerInfoWhenReturning"
              MaxLength="9" >
            <TextBox.Text>
              <Binding 
                  Path="DialogItem.SpeedometerInfoWhenReturning"       
                  ValidatesOnDataErrors="True"       
                  NotifyOnValidationError="True"       
                  UpdateSourceTrigger="PropertyChanged">
                <Binding.ValidationRules>
                  <model:ToIntValidationRule />
                </Binding.ValidationRules>
              </Binding>
            </TextBox.Text>
          </TextBox>

        </StackPanel>
      </StackPanel>
    </GroupBox>
    <StackPanel  Margin="0,10,0,0">
      <TextBlock
        Style="{StaticResource TextBlockStyle}"                 
        Name="textBlockMileage"                 
        Text="Пробег, Км" />
      <TextBox 
        Name="textBoxMileage"        
        IsReadOnly="{Binding IsReadOnly.Field[Mileage]}"
        Text="{
          Binding DialogItem.Mileage,
          ValidatesOnDataErrors=True, 
          NotifyOnValidationError=True, 
          UpdateSourceTrigger=PropertyChanged}" />
    </StackPanel>

  </StackPanel>
 
</UserControl>
